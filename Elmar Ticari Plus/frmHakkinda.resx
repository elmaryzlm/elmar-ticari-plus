<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Versiyon 1.1.4
1-Cari Kart İşlemleri formuna genel bakiyeler eklendi.
2-Yetkilendirme Sistemi aktif edildi
3-Kullanıcı ayarlarını saklama özelliği getirildi

Versiyon 1.1.3
1-Açık Hesapla Satış sorunları düzeltildi
2-Cari seçme sorunu giderildi
3-Cari menüsüne Tahsilat-Ödeme raporu eklendi.

Versiyon 1.1.2
1-Tanımlar menüsüne Fatura ve çıktı dizayn modülü eklendi.
2-Fatura ve çıktı menülerinde dinamik fatura kesme imkanı sağlandı.
3-Cari menüsüne ekstre raporu alma formu eklendi

Versiyon 1.1.1
1-Personel Modülüne Personel Vardiya Sistemi Eklendi
2-Yazılım Logoları Yenilendi

Versiyon 1.1.0
1-Ana-Form resim getirme sorunu giderildi
2-Alış ve satış formlarındaki hatalar giderildi.
3-Kasa formunda düzenlemeler yapıldı
4-Stok ekleme hataları giderildi
5-Pos ile satış düzenlendi.

Versiyon 1.0.9.2
1-Gelir Gider Karma Raporu Eklendi
2-Stok Raporlarına çıktı alma özelliği eklendi
3-Satış Raporlarına çıktı alma özelliği eklendi
4-Teklif-Sipariş Raporlarına çıktı alma özelliği eklendi
5-Stok çıkış menüsü düzenlendi
6-programa Windows Admin ile giriş izni sağlandı.
7-Arka plan logosu değiştirme sistemi getirildi. (Tanımlar/ Firma ve Şube Tanımlamaları/ Arka Plan Logosu düğmesinden.)

Versiyon 1.0.8
1-Gelir Gider Raporları Düzenlendi
2-Gelir Gider Raporlarına toplam tutarlar eklendi
3-Günlük Kasa formundaki hatalar giderildi
4-Personel birey raporları düzenlendi
5-Personel listeleme hataları giderildi
6-Stok çıkış menüsü eklendi


Versiyon 1.0.6
1-Ana Formda düzenlemeler yapıldı. durum çubuğu eklendi.
2-Güncelleme sitemi geliştirildi
3-Personel formunda çeşitli düzenlemeler yapıldı.
4-Personel ekleme hatası  düzeltildi
5-Personel Silme işlemi eklendi
6-Online kontrol sistemi getirildi

Versiyon 1.0.3
1- Kasa menüsüne Masraf Kartları ve Masraf Girişi eklendi
2- Kasa menüsüne Gelir girişi eklendi
3- Gelir Gider raporları eklendi
4- Canlı stok alarm sistemi eklendi
5-Çeşitli düzeltmeler yapıldı.</value>
  </data>
</root>